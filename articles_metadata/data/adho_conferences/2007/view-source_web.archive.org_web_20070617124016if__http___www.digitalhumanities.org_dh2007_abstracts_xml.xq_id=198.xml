<?xml version="1.0" encoding="UTF-8"?>
<TEI.2 id="poster_198_bauman"><teiHeader><fileDesc><titleStmt><title>TEI Constrained: Yet Another Presentation System</title><author><name reg="Bauman, Syd">Syd Bauman</name></author><respStmt><resp>Marked up by</resp><name reg="Schmidt, Sara A.">Sara A. Schmidt</name><name reg="Hawkins, Kevin S.">Kevin S. Hawkins</name></respStmt></titleStmt><publicationStmt><p>Marked up to be included in the Digital Humanities 2007 Conference Abstracts
                    book.</p></publicationStmt><sourceDesc><p>None</p></sourceDesc></fileDesc><profileDesc><textClass><classCode>poster</classCode><keywords><list type="simple"><item>TEI</item><item>ODD</item><item>customization</item><item>slides</item><item>presentation</item></list></keywords></textClass></profileDesc><revisionDesc><list type="simple"><item>SAS: Created from Syd Bauman's text <date value="2007-04"> April 2007</date></item><item>SAS: Revised incorporating Bauman's revisions <date value="2007-05"> May
                    2007</date></item></list></revisionDesc></teiHeader><text><front><docTitle n="TEI Constrained: Yet Another Presentation System"><titlePart type="main">TEI Constrained: Yet Another Presentation System</titlePart></docTitle><docAuthor><name reg="Bauman, Syd">Syd Bauman</name><address><addrLine>Syd_Bauman@Brown.edu</addrLine></address></docAuthor><titlePart type="affil">Brown University Women Writers Project</titlePart></front><body><div0><p>The Text Encoding Initiative Consortium<note n="1">See <xptr to="http://www.tei-c.org/" from="ROOT" targOrder="U"/>, in particular
                            <xptr to="http://www.tei-c.org/Consortium" from="ROOT" targOrder="U"/>.</note> claims that its new Guidelines (P5)<note n="2"> As of this writing
                        the current alpha release (0.6) is available both via the TEI website and on
                        Sourceforge. See <xptr to="http://sourceforge.net/project/showfiles.php?group_id=106328&amp;package_id=141127" from="ROOT" targOrder="U"/> or <xptr to="http://www.tei-c.org/P5/" from="ROOT" targOrder="U"/>.</note> can be customized for almost any
                    purpose, including writing new documents (as opposed to transcribing existing
                    ones). This author regularly teaches workshops on text encoding using the Text
                    Encoding Initiative Guidelines, and believes it is important that TEI advocates
                    “eat our own dog food” — that is, we should use TEI to encode the documents used
                    to teach TEI. This includes the slides displayed during a presentation or
                    lecture, and any associated handouts. Initially the author’s workshops were
                    written in TEI Lite and the slides were created using Sebastian Rahtz’s
                    stylesheets for slides provided by the TEI Consortium. Quite quickly it became
                    clear that a more reliable, better documented, and easier to use system was
                    needed; the hallmark feature of such a system would be a highly constrained
                    schema tailored to the needs of a workshop presentation. </p><p>Such a highly constrained schema tailored to the particular purpose has several
                    important advantages. First, it makes authoring much easier. A large variety of
                    elements that make no sense in the context of a workshop slide are available in
                    TEI Lite, e.g. <hi rend="code">&lt;gap&gt;</hi> or <hi rend="code">&lt;interpGrp&gt;</hi>. When writing slides for the workshop, the
                    author needs to pick and choose from among the available elements, including
                    those which make no sense. Eliminating these makes the author’s encoding task
                    much simpler. Second, the semantics of elements can be expressed more
                    explicitly. E.g., a <hi rend="code">&lt;slide&gt;</hi> element can be
                    used instead of <hi rend="code">&lt;div type="slide"&gt;</hi> . This may
                    seem like a minor point, but the third advantage requires it: that constraints
                    required for the purpose can be enforced in the schema. E.g., in TEI Lite the
                        <hi rend="code">&lt;head&gt;</hi> element is an optional child of a
                        <hi rend="code">&lt;div&gt;</hi>, whereas it can be made a required
                    child of a <hi rend="code">&lt;slide&gt;</hi>, and still be an optional
                    child of a <hi rend="code">&lt;div&gt;</hi>.</p><p>In order to ascertain how difficult it is to create such a highly constrained,
                    specialized schema using P5, a new system was developed using the TEI’s new ODD
                    (one document does it all) system.<note n="3">For the definition of the ODD
                        system, see Chapter 27 “Documentation Elements,” <title level="m">Guidelines
                            for Electronic Text Encoding and Interchange</title>, ed. Syd Bauman,
                        Lou Burnard, &amp; C. M. Sperberg-McQueen (Text Encoding Initiative
                        Consortium, 2006). <xptr to="http://www.tei-c.org/release/doc/tei-p5-doc/html/TD.html" from="ROOT" targOrder="U"/>. For a tutorial on the ODD system, see Rahtz &amp; Burnard,
                            <title level="a">One Document Does it all</title>, presented at the TEI
                        annual Members’ Meeting 2005, Sofia, Bulgaria. <xptr to="http://www.tei-c.org/Talks/2005/Sofia/odds.pdf" from="ROOT" targOrder="U"/>. For an overview and discussion of the theoretical implications, see
                        Bauman &amp; Flanders, <title level="a">Odd Customizations</title>,
                        presented at Extreme Markup Languages 2004, Montreal, Canada. <xptr to="http://www.idealliance.org/papers/extreme/proceedings/html/2004/Bauman01/EML2004Bauman01.html" from="ROOT" targOrder="U"/>. For a variety of samples
                        of ODD in use, see Bauman et al., “An Odd Basket of ODDs”, presented at DH
                        2006, Paris, France.</note> Because there are already quite a few
                    presentation systems available to the workshop instructor, both proprietary and
                    open, both XML-based and others, the new system is called Yet Another
                    Presentation System, or “yaps”. Accordingly, its icon is a dog. Yaps provides
                    the capability to write a single document for a presentation, and from that
                    document create slides, notes intended for the lecturer, and notes intended to
                    be part of a hand-out for participants. The system is well documented, with an
                    intended audience being a person who is familiar with TEI and is generally
                    technologically savvy, but may not have much direct experience with complex
                    transformations and stylesheets. Many such TEI users use the commercial XML
                    editor oXygen, which includes most of the needed software packages (e.g.,
                    xmllint and Saxon 8) built-in. Therefore instructions are provided for using the
                    system from within oXygen, as well as from the command-line.</p><p>The system comprises (in order of academic interest): <list type="unordered"><item>An extensive TEI customization which provides a TEI markup language
                            for presentations, and documentation for the use of that language.</item><item>An XSLT stylesheet that transforms a document conforming to the markup
                            language described by the ODD to XHTML.</item><item>CSS stylesheets for viewing both the source and the various outputs in
                            a browser.</item><item>A shell script front-end (for GNU/Linux, Mac OS X, or similar systems)
                            for executing the commands necessary to generate the system
                            documentation and schemas from the ODD file. This relies on
                                <distinct>roma.sh</distinct>, the ODD processing tool written for
                            the TEI by Sebastian Rahtz.<note n="4"> Available on Sourceforge at
                                    <xptr to="http://sourceforge.net/project/showfiles.php?group_id=106328&amp;package_id=141128" from="ROOT" targOrder="U"/>.</note></item><item>A shell script front-end (for GNU/Linux, Mac OS X, or similar systems)
                            for executing the commands necessary to apply the XSLT transformations
                            to a source yaps file, generating multiple linked XHTML files.</item></list></p></div0><div0><head>TEI customization</head><p>The TEI customization or ODD file that defines both the yaps schema and its
                    documentation is large (currently almost 2000 lines) and thorough. It
                    demonstrates several interesting features (e.g., deletion of classes, use of
                    Schematron). But more controversially, the documentation therein is not only for
                    the <emph>language</emph> described, but is also the documentation for its
                        <emph>use</emph>. This is certainly not a “pure” or intended use of TEI ODD,
                    and some might even say it is inappropriate. On the other hand, ODD provides a
                    reasonable place for such documentation, and TEI provides a reasonably rich and
                    familiar language with which to write such documentation. </p><p>The markup language described by the ODD is much smaller and far more structured
                    than the TEI most of us are used to. From the beginning the goal has been to
                    create a markup language that would be easy to use (because the authors using it
                    are already well versed in TEI), but constructed specifically for the production
                    of slides and associated materials to be used during a presentation. The
                    language is deliberately highly constrained. For example, even in cases where
                    order would be irrelevant as far as processing is concerned, a particular order
                    is required by the schema primarily for the benefit of the author, who has to
                    make fewer guesses about what should come next, and make few if any decisions
                    between equivalent encodings.</p><p>The yaps language was not designed as a standalone language and then retrofitted
                    to TEI, but neither were significant compromises to the desired language made to
                    make it easy to express it as a TEI language. Thus the customization ODD is
                    somewhat complicated in order that the end result be a simple, applicable
                    language. For example, the <hi rend="code">&lt;body&gt;</hi> element
                    with its <hi rend="code">&lt;div&gt;</hi>s is replaced by a <hi rend="code">&lt;presentation&gt;</hi> element which has nothing but
                        <hi rend="code">&lt;section&gt;</hi> (or <hi rend="code">&lt;sectionGrp&gt;</hi>) children. It would have been easier to
                    design a customization which used <hi rend="code">&lt;div
                        type="section"&gt;</hi>. While this would have been semantically
                    equivalent, it is not possible (in ODD) to provide the desired syntactic
                    constraints on <hi rend="code">&lt;div&gt;</hi>, whereas it is easy to
                    provide such constraints on <hi rend="code">&lt;section&gt;</hi>.</p><p>There are only three possible children of a <hi rend="code">&lt;section&gt;</hi>: one for a slide, one for instructor’s notes,
                    and one for an accompanying handout. There are currently only 96 elements
                    defined in this language, many of which are metadata elements used in the <hi rend="code">&lt;teiHeader&gt;</hi>. As an example of its simplicity,
                    there are only 14 elements available to an author writing the content of a <hi rend="code">&lt;slide&gt;</hi>; there are well over twice that many
                    available to the author of a TEI Lite document using <hi rend="code">&lt;div
                        type="slide"&gt;</hi>.</p></div0><div0><head>XSLT</head><p>The stylesheet is a single parameterized XSLT 2.0 stylesheet that is over 1000
                    lines long. It creates relatively abstract valid XHTML output (i.e., most of the
                    input YAPS elements are represented by XHTML <hi rend="code">&lt;span&gt;</hi> elements that make use of the <hi rend="code">class=</hi> attribute). I am hopeful that it is of high enough quality to
                    be a useful example for beginners; simultaneously I am hoping XSLT experts will
                    be able to provide pointers and advice on improvements.</p></div0><div0><head>Further Features</head><p>Although the system is quite usable in its current state (Julia Flanders,
                    Christian Wittern, and I have all made use of it for workshops) there are, of
                    course, a lot of improvements still to be made. Many of these improvements I
                    expect to have in place before the conference. <list type="unordered"><item>Make locations of stylesheets, etc., more generalized</item><item>Make licensing conditions (e.g., GPL) more explicit</item><item>Update documentation to match current release of oXygen</item><item>Consider use of a configuration file that would make customization of
                            some of the CSS features easy</item><item>Consider creation of a transform to/from APXL (Apple’s schema for
                            Keynote)</item><item>Generate PDF as well as XHTML (not expecting to do this before
                            conference)</item></list></p></div0></body></text></TEI.2>