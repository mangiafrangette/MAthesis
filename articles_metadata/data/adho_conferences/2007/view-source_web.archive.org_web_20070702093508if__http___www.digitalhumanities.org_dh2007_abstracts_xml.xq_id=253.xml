<?xml version="1.0" encoding="UTF-8"?>
<TEI.2 id="paper_253_wardrip-fruin"><teiHeader><fileDesc><titleStmt><title>Three Play Effects: Eliza, Tale-Spin, and SimCity</title><author><name reg="Wardrip-Fruin, Noah">Noah Wardrip-Fruin</name></author><respStmt><resp>Marked up by</resp><name reg="Field, Hana S.">Hana S. Field</name></respStmt></titleStmt><publicationStmt><p>Marked up to be included in the Digital Humanities 2007 Conference Abstracts
                    book.</p></publicationStmt><sourceDesc><p>None</p></sourceDesc></fileDesc><profileDesc><textClass><classCode>paper</classCode><keywords><list type="simple"><item>digital literature</item><item>play</item><item>games</item><item>interfaces</item><item>design</item></list></keywords></textClass></profileDesc><revisionDesc><list><item>HSF: Created from Noah Wardrip-Fruin's txt<date value="2007-04">April
                    2007</date></item><item>SAS: Revised <date value="2007-05"> May 2007</date></item></list></revisionDesc></teiHeader><text><front><docTitle n="Three Play Effects: Eliza, Tale-Spin, and SimCity"><titlePart type="main">Three Play Effects: Eliza, Tale-Spin, and SimCity</titlePart></docTitle><docAuthor><name reg="Wardrip-Fruin, Noah">Noah Wardrip-Fruin</name><address><addrLine>nwf@ucsd@edu</addrLine></address></docAuthor><titlePart type="affil">University of California San Diego</titlePart></front><body><div0><p>In the mid-1960s Joseph Weizenbaum created a stunning piece of software. Years
                    before HAL 9000's screen debut in <emph>2001: A Space Odyssey</emph>, this
                    software, <emph>Eliza</emph>, made it possible to have a conversation with a
                    computer. <emph>Eliza's</emph> most famous script, <emph>Doctor</emph>, caused
                    the software to parody the conversational patterns of non-directive therapists
                    during an initial visit. While <emph>Eliza/Doctor</emph> can seem quite smart at
                    first blush, each script for <emph>Eliza</emph> is actually just a set of
                    linguistic tricks. Most of these tricks use keyword-driven "decomposition rules"
                    to take the user's last statement, divide it into pieces, and selectively reuse
                    portions to rephrase it as a question. </p><p>But when we interact with a piece of software we don't necessarily get a clear
                    picture of how it actually operates internally. And many users of
                        <emph>Eliza/Doctor</emph> initially developed very mistaken ideas about its
                    internals. Weizenbaum (1976) discusses users who assumed that, since the surface
                    appearance of an interaction with the program could resemble something like a
                    coherent dialogue, internally the software must be very complex. Some at first
                    thought it must be something close to the fictional HAL: a computer program
                    intelligent enough to understand and produce arbitrary human language. This
                    happened so often, and was so striking, that computer science circles developed
                    a specific term for this kind of misunderstanding: "the <emph>Eliza</emph>
                    effect." </p><p> This paper is a brief look at the <emph>Eliza</emph> effect, and at two
                    previously-unnamed effects that can arise in the relationship between the
                    surface appearance of a digital system and its internal operations. More
                    specifically, this paper looks where others haven't when exploring versions of
                    this relationship: the area of play.</p><p>While the initial experience of <emph>Eliza/Doctor</emph> can create the surface
                    impression of an incredibly complex internal system, sustained interaction with
                    the system, the verbal back-and-forth, invites play ... and linguistic play with
                        <emph>Eliza/Doctor</emph> quickly begins to destroy the illusion. In other
                    words, precisely the open-ended textual interaction that helped foster the
                    illusion of internal complexity and intelligence enables play that draws
                    attention to the system's rote simplicity, its distance from human interaction.</p><p>On the other hand, a sort of inverse of the <emph>Eliza</emph> effect can be seen
                    with James Meehan's 1976 <emph>Tale-Spin</emph>, the first major story
                    generation program. <emph>Tale-Spin</emph> generates stories from rules for
                    character behavior and a set of facts about the virtual world. When generating
                    stories in interaction with an audience it asks questions to fill in details
                    about locations, objects, relationships, and so on. In addition, internal
                        <emph>Tale-Spin</emph> mechanisms draw "inferences" from the facts. For
                    example, if it is asserted that a character is thirsty, then the inference
                    mechanisms result in the character knowing she is thirsty, forming the goal of
                    not being thirsty, forming a plan for reaching her goal, etc. </p><p>Further, <emph>Tale-Spin</emph> characters can use its inference mechanisms to
                    "speculate" about the results of different courses of action. Meehan's The
                    Metanovel (1976) describes a story involving such speculation, in which a hungry
                    Arthur Bear asks George Bird to tell him the location of some honey. We learn
                    that George believes that Arthur trusts him, and that Arthur will believe
                    whatever he says. So George begins to use the <emph>Tale-Spin</emph> inference
                    mechanisms to "imagine" other possible worlds in which Arthur believes there is
                    honey somewhere. George draws four inferences from this, and then he follows the
                    inferences from each of those inferences, but he doesn't find what he's after.
                    In none of the possible worlds about which he's speculated is he any happier or
                    less happy than he is now. Seeing no advantage in the situation for himself, he
                    decides, based on his fundamental personality, to answer. Specifically, he
                    decides to lie. </p><p>This is a relatively complex piece of psychological action, and certainly tells
                    us something about George as a character. But the surface output of a
                        <emph>Tale-Spin</emph> story never contains any information about this kind
                    of action. No matter how creatively one plays with <emph>Tale-Spin</emph>, such
                    hidden action cannot be deduced from its surface. This is probably why, though
                        <emph>Tale-Spin</emph> is seen as a landmark in computer science circles, it
                    is often treated with near-ridicule in literary circles. Janet Murray, Espen
                    Aarseth, Jay David Bolter, and other critics have failed to see what makes
                        <emph>Tale-Spin</emph> interesting, focusing instead on what its output
                    looks like on the surface. Or, to put it another way, <emph>Tale-Spin</emph>
                    fails to display its interesting internal processes in a manner that makes them
                    visible to even the most careful of critics. </p><p>This situation is far from uncommon in digital media, perhaps particularly in the
                    digital arts, where fascinating processes  —  drawing on inspirations ranging from
                    John Cage to the cutting edge of computer science  —  are often encased in an
                    opaque surface. In fact, this effect is at least as common as the
                    <emph>Eliza</emph> effect, though I know of no term that describes it. Given
                    this, I propose "the <emph>Tale-Spin</emph> effect" as a term for works that
                    appear, on their surface, significantly less complex than they are internally. </p><p>An effect quite different from both of these can be seen in the case of Will
                    Wright's 1989 game <emph>SimCity</emph>. The seed for this project was planted
                    as Wright created a landscape editor for authoring his first game, an attack
                    helicopter simulation. Working with the editor, he realized he was having more
                    fun making virtual spaces than blowing them up. From this the idea for Wright's
                    genre-defining <emph>SimCity</emph> was born. </p><p><emph>SimCity</emph>, of course, unlike a terrain editor, doesn't simply wait for
                    a user to do something. Time begins passing the moment a new city is founded. A
                    status bar tells the player what's needed next  —  starting with basic needs like
                    a residential zone and a power plant and, if play succeeds for any period,
                    ramping up to railroads, police stations, stadiums, and so on. As cities grow,
                    areas respond differently. Some may be bustling while others empty out, or never
                    attract interest. <emph>SimCity</emph> provides different map views that can
                    help diagnose problems with abandoned areas. Players can try changing existing
                    areas of the city (e.g., building additional roads) or create new areas with
                    different characteristics. Observation and comparison offer insights, while
                    answers are found by trying different approaches and considering the results. </p><p>In other words, the process of play with <emph>SimCity</emph> is one of learning
                    to understand the system's operations. Conversely, as Wright explains, the
                    challenge of game design is to create a surface experience that will make it
                    possible for audiences to build up an appropriate model of the system internals. </p><p>Here, again, we lack a term for an experience. I propose "the
                    <emph>SimCity</emph> effect" for this important phenomenon: a system that,
                    through play, brings the player to an accurate understanding of the system's
                    internal operations. Of course, the <emph>SimCity</emph> effect is named for
                    cases where the system is complex, but the phenomenon can be observed generally.
                        <emph>Pong</emph> works as well as it does because it effectively
                    communicates at the surface level its quite simple internal operations. </p><p>What is exciting about the <emph>SimCity</emph> effect, and about Wright's work
                    generally, is that it helps us get at the new possibilities opened by working
                    with computational media. <emph>Pong</emph> is very similar to games we play
                    without computers, but <emph>SimCity</emph> is a more complex system than even
                    the most die-hard Avalon Hill fan would want to play as a tabletop game. This
                    ability to work with computational processes, to create complex computational
                    systems, is the opportunity that digital media affords  —  and the
                    <emph>SimCity</emph> effect points the way toward creating experiences of this
                    sort that succeed for audiences.</p></div0></body><back><div type="Bibliography"><head>Bibliography</head><listBibl><biblStruct><monogr><author><name reg="Aarseth, Espen J.">Espen J. Aarseth</name></author><title level="m"> Cybertext: Perspectives on Ergodic Literature</title><imprint><pubPlace>Baltimore</pubPlace><publisher>Johns Hopkins University Press</publisher><date value="1997">1997</date></imprint></monogr></biblStruct><biblStruct><monogr><author><name reg="Bolter, Jay David">Jay David Bolter</name></author><title level="m"> Writing Space: The Computer, Hypertext, and the
                                History of Writing</title><imprint><pubPlace>New Jersey</pubPlace><publisher>Lawrence Erlbaum Associates, Inc</publisher><date value="1991">1991</date></imprint></monogr></biblStruct><biblStruct><monogr><author><name reg="Murray, Janet H.">Janet H. Murray</name></author><title level="m"> Hamlet on the Holodeck</title><imprint><pubPlace>New York</pubPlace><publisher>The Free Press</publisher><date value="1997">1997</date></imprint></monogr></biblStruct><biblStruct><analytic><author><name reg="Meehan, James R.">James R. Meehan</name></author><title level="u">The Metanovel: Writing Stories by Computer</title></analytic><monogr><edition>PhD thesis</edition><imprint><publisher>Yale University</publisher><date value="1976">1976</date></imprint></monogr></biblStruct><biblStruct><monogr><author><name reg="Weizenbaum, Joseph">Joseph Weizenbaum</name></author><title level="m">Computer Power and Human Reason: From Judgment to
                                Calculation</title><imprint><pubPlace>New York</pubPlace><publisher>W.H. Freeman</publisher><date value="1976">1976</date></imprint></monogr></biblStruct></listBibl></div></back></text></TEI.2>