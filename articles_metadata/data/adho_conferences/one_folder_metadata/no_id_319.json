{"url": null, "identifier": {"string_id": null, "id_scheme": null}, "abstract": "Creating digital editions so far is devoted for the most part to visualisation of the text. The move from mental to machine processing, as envisaged in the Semantic Web initiative, has not yet become a priority for the editorial practice in a digital environment. This drawback seems to reside in the almost exclusive attention paid until now to markup at the expense of textual data models. The move from “the database as edition” [Thaller, 1991: 156-59] to the “edition as a database” [Buzzetti et al., 1992] seems to survive only in a few examples. As a way forward we might regard digital editions to care more about processing textual information rather than just being satisfi ed with its visualisation. Here we shall concentrate on a recent case study [Rehbein, forthcoming], trying to focus on the kind of logical relationship that is established there between the markup and a database managing contextual and procedural information about the text. The relationship between the markup and a data model for textual information seems to constitute the clue to the representation of textual mobility. From an analysis of this kind of relationship we shall tentatively try to elicit a dynamic model to represent textual phenomena such as variation and interpretation. I. The case study uses the digital edition of a manuscript containing legal texts from the late medieval town Göttingen. The text shows that this law was everything else but unchangeable. With it, the city council reacted permanently on economical, political or social changes, thus adopting the law to a changing environment. The text is consequently characterised by its many revisions made by the scribes either by changing existing text or creating new versions of it. What has come to us is, thus, a multi-layered text, refl ecting the evolutionary development of the law. In order to visualise and to process the text and its changes, not only the textual expression but, what is more, its context has to be regarded and described: when was the law changed, what was the motivation for this and what were the consequences? Answers to these questions are in fact required in order to reconstruct the different layers of the text and thereby the evolution of the law. Regarding the text nowadays, it is however not always obvious how to date the alterations. It is sometimes even not clear to reveal their chronological order. simple example shall prove this assumption. Consider the sentence which is taken from the Göttingen bylaws about beer brewing we ock vorschote 100 marck, de darf 3 warve bruwen together with 150 as a replacement for 100 and 2 as a replacement for 3. (The meaning of the sentence in Low Middle German is: one, who pays 100 (150) marks as taxes, is allowed to brew beer 3 (2) times a year.) Without additional information, the four following readings are allowed, all representing different stages of the textual development: R1: we ock vorschote 100 marck, de darf 3 warve bruwen R2: we ock vorschote 100 marck, de darf 2 warve bruwen R3: we ock vorschote 150 marck, de darf 3 warve bruwen R4: we ock vorschote 150 marck, de darf 2 warve bruwen With some more information (mainly palaeographical) but still limited knowledge, three facts become clear: fi rstly, that R1 is the oldest version of the text, secondly that R4 is its most recent and thirdly that either R2 or R3 had existed as text layers or none of them but not both. But what was, however, the development of this sentence? Was it the path directly from R1 to R4? Or do we have to consider R1 > R2 > R4 or R1 > R3 > R4? In order to answer these questions we need to know about the context of the text, something that can not be found in the text itself. It is the external, procedural and contextual knowledge that has to be linked to the textual expression in order to fully analyse and edit the text. Textual mobility in this example means that, to a certain extent, the textual expression itself, its sequence of graphemes, can be regarded as invariant and objective, the external knowledge about its context cannot. It is essential in our case study not only to distinguish between the expression and the context of the text but what is more to allow fl exibility in the defi nition and reading of (possible) text layers. It became soon clear, that for both, visualising and processing a dynamic text, a new understanding of an edition is needed, and, as a consequence, the mark-up strategy has to be reconsidered. This new understanding would “promote” the reader of an edition to its user, by making him part of it in a way that his external knowledge, his contextual setting would have infl uence on the representation of the text. Or in other words: dynamic text requires dynamic representation. The way chosen in this study is to regard textual expression and context (external knowledge) separately. The expression is represented by mark-up, encoding the information about the text itself. Regarding this stand-alone, the different units of the text (its oldest version, its later alterations or annotations) could indeed be visualised but not be brought into a meaningful relationship to each other. The latter is realised by a database providing structured external information about the text, mainly what specifi c “role” a certain part of the text “plays” in the context of interest. Only managing and processing both, markup and database, will allow to reconstruct the different stages of the text and consequently to represent the town law in its evolutionary development. Using the linkage mechanism between mark-up and database, the whole set of information is processable. In order to create a scholarly edition of the text, we can automatically produce a document that fulfi ls TEI conformity to allow the use of the widely available tools for transformation, further processing and possibly interchange. II. The case study just examined shows that in order to render an edition processable we have to relate the management system of the relevant data model to the markup embedded in the text. But we cannot provide a complete declarative model of the mapping of syntactic markup structures onto semantic content structures. The markup cannot contain a complete content model, just as a content model cannot contain a complete and totally defi nite expression of the text. To prove this fact we have to show that a markup description is equivalent to a second-order object language self-refl exive description and recall that a second-order logical theory cannot be complete. So the mapping cannot be complete, but for the same reason it can be categorical; in other words, all the models of the text could be isomorphic. So we can look for general laws, but they can provide only a dynamic procedural model. Let us briefl y outline the steps that lead to this result. In a signifi cant contribution to the understanding of “the meaning of the markup in a document,” [Sperberg-McQueen, Huitfeldt, and Renear, 2000: 231] expound it as “being constituted,” and “not only described,” by “the set of inferences about the document which are licensed by the markup.” This view has inspired the BECHAMEL Markup Semantics Project, a ground breaking attempt to specify mechanisms “for bridging [...] syntactic relationships [...] with the distinctive semantic relationships that they represent” [Dubin and Birnbaum, 2004], and to investigate in a systematic way the “mapping [of] syntactic markup structures [on]to instances of objects, properties, and relations” [Dubin, 2003] that could be processed trough an appropriate data model. Following [Dubin and Birnbaum, 2004], “that markup can communicate the same meaning in different ways using very different syntax”, we must conclude that “there are many ways of expressing the same content, just as there are many ways of assigning a content to the same expression” [Buzzetti, forthcoming]. The relationship between expression and content is then an open undetermined relationship that can be formalized by taking into account the “performative mood” of markup [Renear, 2001: 419]. For, a markup element, or any textual mark for that matter, is ambivalent: it can be seen as part of the text, or as a metalinguistic description/ indication of a certain textual feature. Linguistically, markup behaves as punctuation, or as any other diacritical mark, i.e. as the expression of a refl exive metalinguistic feature of the text. Formally, markup behaves just as Spencer-Brown’s symbols do in his formal calculus of indications [1969]: a symbol in that calculus can express both an operation and its value [Varela, 1979: 110- 111]. Markup adds structure to the text, but it is ambivalent. It can be seen as the result of a restructuring operation on the expression of the text (as a textual variant) or as an instruction to a restructuring operation on the content of the text (as an interpretational variant). By way of its ambivalence it can act as a conversion mechanism between textual and interpretational variants [Buzzetti and McGann, 2006: 66] [Buzzetti, forthcoming]. Markup originates a loop connecting the structure of the text’s expression to the structure of the text’s content. An implementation of the markup loop would considerably enhance the functionality of text representation and processing in a digital edition. To achieve implementation, markup information could be integrated into the object (or datatype) ‘string’ on which an application system operates. Extended strings, as a datatype introduced by Manfred Thaller [1996, 2006], look as a suitable candidate for the implementation of the markup loop. Markup originates a loop connecting the structure of the text’s expression to the structure of the text’s content. An implementation of the markup loop would considerably enhance the functionality of text representation and processing in a digital edition. To achieve implementation, markup information could be integrated into the object (or datatype) ‘string’ on which an application system operates. Extended strings, as a datatype introduced by Manfred Thaller [1996, 2006], look as a suitable candidate for the implementation of the markup loop.", "article_title": "Towards a model for dynamic text editions", "authors": [{"given": "Dino ", "family": "Buzzetti", "affiliation": [{"original_name": "University of Bologna, Italy", "normalized_name": "University of Bologna", "country": "Italy", "identifiers": {"ror": "https://ror.org/01111rn36", "GRID": "grid.6292.f"}}]}, {"given": "Malte ", "family": "Rehbein", "affiliation": [{"original_name": "National University of Ireland, Galway, Ireland", "normalized_name": "National University of Ireland", "country": "Ireland", "identifiers": {"ror": "https://ror.org/00shsf120", "GRID": "grid.9344.a"}}]}], "publisher": null, "date": "2008", "keywords": null, "journal_title": "ADHO Conference Abstracts", "volume": null, "issue": null, "ISSN": [{"value": null, "type": null}]}