If one uses a markup syntax with looser rules than XML's, it becomes more straightforward to represent certain kinds of phenomena, for example overlapping spans or hierarchies in texts. *LMNL*, the Layered Markup and Annotation Language, offers a markup syntax and a data model to go with it. Because of the relaxed definition of its data model - essentially a set of annotated ranges over a text, in no particular relation to one another except as processing may assume or infer -- LMNL offers a great deal of freedom in modeling and description. Nevertheless, because it is defined formally and generically, it is possible to build generic processing pipelines for LMNL, to support operations such as filtering, indexing, renaming and transformation. XML can be extracted from LMNL; diagrams can be drawn representing marked up features. With live demonstration of a LMNL processing pipeline, *Luminescent*.