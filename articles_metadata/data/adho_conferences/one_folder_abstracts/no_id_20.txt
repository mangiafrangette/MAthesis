   1. Introduction One of Chomsky's early distinctions separated 'rule-governed creativity' and 'rule-changing creativity'. In the first, applications of a rule within a formal system produce new output, while in the second, some mechanism is used to change the set of rules themselves. While the overall concept of language as a rule-governed creative system has now gained general currency in linguistics, the distinction itself has found less favour. One group, however, which has used the concept, if not the term, is OuLiPo, the 'Ouvroir de Littérature Potentielle' (Potential Literature Working Group), a group of French poets, novelists and mathematicians which for the past several decades has dedicated itself to the exploration of constraints as a device for enhancing poeticity. Most notable among them have been authors like Raymond Queneau and Georges Perec. Two well-known examples of their work are 'Cent mille milliards de poèmes' (One hundred billion poems) by Queneau, which uses sheets of substitutable lines of a sonnet to produce 10 to the 14th power individual poems, and 'La Disparition' (The Disappearance) by Perec, a 300 plus page novel in which the letter e never appears. (See references for details.) More generally, OuLiPo has set as its goal the formulation and exemplification of a wide range of formal constraints which may be used to enhance and enrich poetic production. In what follows, we will survey some of the basic types of constraints. We will then show how some of these constraints may be embodied in a natural language generation system. The goal will be to illustrate how such a system may provide a prosthetic extension to humans' ability to exhaustively draw out the implications of a particular rule. Finally, we will show how such a system may also be used to modify the constraints themselves.   2. A brief overview of some OuLiPo constructs The operations described in OuLiPo texts may apply at all linguistic levels, from phonemes, to letters, to words, sentences and texts. On the systemic level, they include addition and subtraction of elements and restriction of choices, while on the serial level they include concatenation and permutation. Operations may be purely formal, or involve semantics as well. Finally, the elements involved may be comparable or disparate. Let us consider some examples:  Phonemes or letters  Lipograms: texts in which one or more letters is/are lacking (La Disparition, for example) Shared initial letter: le chat, le chien, le chameau, ... for example, where all words in the list are based on the orthographic constraint Sequences of letters: les agents, les ballons, les cambrioleurs... for example Anagrams: for example, the various permutations of a word such as 'rose', including 'eros'    Lexical level:  Synonymy: production of a text followed by systematic replacement of an initial lexical choice by a synonym S + 7: replacement of each noun in a text by the seventh following noun in the dictionary Word formation: for example, Raymond Queneau takes as a starting point the word 'dèvisager' (to stare someone in the face - le visage) and replaces this particular body part by two others: 'poitrine' (the chest) and 'jambe' (the leg) to create the new words 'dèpoitriner' (to stare someone in the chest) and 'dèjamber' (to stare someone in the leg). There is also an ironic secondary sense of 'removal of a body part'. Word contamination: for example, Queneau blends 'formation' (training) and 'sillon' (furrow or groove) to produce 'formasillon', with its ironic identification of training and the straight and narrow path.    Syntactic level:  Homosyntactic structures: repetition of the same syntactic frame. La Disparition contains many series of the sort, for example: L'Alhambra brûlait, l'Institut fumait, l'Hôpital Saint-Louis flambait. (The Alhambra burned, the Institute smoked, Saint-Louis Hospital flamed.) l'iris malin d'un cachalot colossal, narguant Jonas, clouant Cain, fascinant Achab. (the evil iris of an enormous sperm whale, mocking Jonas, striking Cain, fascinating Ahab) Suicida-t-il? Appuya-t-il un canon sur son zygoma? S'ouvrait-il au rasoir dans un bain chaud? Avala-t-il un bol d'acqua-toffana? Lança-t-il son auto dans un trou sans fond tourbillonnant sans fin jusqu'au soir du Grand Jour, jusqu'au jour du Grand Soir? (Did he commit suicide? Did he put a barrel to his zygoma? Did he open his veins in a hot bath? Did he swallow a bowl of acqua-toffana? Did he drive his car into a bottomless pit which swirled without end until the evening of The Day, or the day of The Evening?)      3. Formalisation and generation of constructs The examples described above are formalisable, but they have been generated by humans, using their intuition at a particular point in space and time. From the computational perspective, it is interesting to ask to what extent the computer may provide us with a prosthetic device to exhaustively explore the consequences of a particular construct. In this vein, we have used the VINCI generation environment to model examples such as those above. Briefly, VINCI is a collection of metalanguages which allows a linguist to specify grammatical information, and an interpreter which produces utterances based on the specification provided. It includes the following components: a. Context-free phrase structure rules for specifying sequences. These include terminals (N, V, etc.) and attributes (masc, human, etc.). Output is in the form of structured trees. Generation of successive levels may be controlled by the characteristics of the parent level. b.Transformation rules, which allow systematic modification of initial trees. c. A lexicon, including semantic information, formal characteristics, and pointers to related forms (synonyms, antonyms, etc.) d. Word-formation rules, which may be applied either globally to an entire lexicon, or dynamically. e. Morphology rules, for inflexion.  Lessard and Levison (1995) and Levison and Lessard (1995) provide additional details. Most of the preceding examples can be captured by the VINCI formalism.  Shared initial letter  The following rule produces a sequence of masculine singular noun phrases, where each noun begins with the letter 'm'. SN = DET[masc,sing,déf] N[masc,sing]/ "m*"  Sample output includes:le moyen, le maillot, le malheureux, le moment, le mètre, le mal  Lipograms in e  These are more complex, since they require several steps, including a pre-sorting of the lexicon, to remove words containing 'e' internally, as well as those words whose morphology rule adds an 'e' (cf. grand - grande). An additional step can include a device for choosing words which begin with a vowel, thereby allowing the masculine article (cf. l'ami), or which are feminine singular (la condition). The following simple rule illustrates a specification of a small part of this:  SN = {Masculine singular human nouns starting in 'a'} ( DET[masc, sing] N[masc, sing, humain]/ "a*" ADJ[masc, sing, humain] | {or} {Feminine singular human nouns followed by adjectives whose feminin is identical to the masculine form ($13) thus avoiding 'e'} DET[fém, sing] N[fém, sing, humain] ADJ[fém, sing, humain]/$13 | {or} {etc. etc.} Sample output includes: l'ami obscur, l'amant amusant, l'avocat assis, la condition citron S+7 This can be achieved by pre-processing the lexicon so that each noun points to its seventh successor. A transformation can then be applied which replaces each noun by the word pointed to. If the pointers are in lexical field 13 with tag s7, we may write: ROOT = S7 : SN SN = choose Ge : Genre, No : Nombre; DET[Ge,No] N[Ge,No] S7 = TRANSFORMATION DET N : 1 2/ @13:s7  For the sake of clarity, we ignore a possible gender change. Word formation VINCI possesses a rich set of devices for forming new words. For example, given the example 'dèvisager' described above, the following rule systematically searches a lexicon for nouns having the semantic trait 'partieducorps' (bodypart) and produces appropriate output: "*e"|N|partieducorps.suj|?|?|?| _makes_ ["dé" + #1 + "r"]|V| | | | | % dévisager déventrer détêter dépoitriner dépatter déorganer déoreiller démembrer délanguer délèvrer déjouer déjamber dégorger défoier défacer déboucher débarber déailer déépauler Again, we have left the rule underspecified. Additional steps are required to add an -s before nouns beginning with a vowel. Homosyntactic structures It is clear that all the previous rules can be used iteratively to produce multiple occurrences of the same syntactic structure.   4. Meta-generation In the cases discussed above, the goal has been to generate utterances based on grammatical descriptions, the rationale being that humans are less good than computers at exhaustively enumerating the products of a grammatical rule. It is however possible to carry the process one step further. Since VINCI grammatical specifications are themselves only text files, it is possible to use VINCI itself to generate grammatical rules which in turn generate new utterances. The advantage of such an approach comes in cases where the computer can be made to generate a large number of potential new rules, each of which generates a large number of possible products. The result can be to cause the human to see previously unthought-of rule possibilities. To illustrate this, consider the following problem. Languages like French (and English) allow for multiple prefixes to be added to a base form. For example, Queneau uses the word 'archidyssymètrique', which has two prefixes, while a form like 'non-anti-defoliant' is a possible English form. One way of capturing such possibilities would be to enumerate all rule combinations by hand. This would be tedious and prone to error. A better alternative would be to allow a meta-rule to generate a large number of possible prefixation rules and then to use these to produce typical examples. For example, consider the following meta-rules: MANYPREFIXES = (PREFIX: MANYPREFIXES | PREFIX ) PREFIX = (PREFIX_NON | PREFIX_RE | ...) ROOT = (MANYPREFIXES: N | MANYPREFIXES: V | MANYPREFIXES : ADJ ) where PREFIX_NON etc. are transformations. When applied, these meta-rules produce grammatical rules like: ROOT = PREFIX_NON : N ROOT = PREFIX_NON : PREFIX_RE : V ROOT = PREFIX_RE : PREFIX_NON : ADJ ROOT = PREFIX_NON : PREFIX_NON : PREFIX_RE : ... V  and so on, which in turn can be used to generate actual utterances. Obviously, additional elements would be required to control more precisely the nature of the prefixes, but the essential principle should be clear. An intermediate step is also possible, in which VINCI hands control temporarily back to a user. So, for example, a researcher might have put in front of him or her a partially developed meta-rule and be asked to insert particular values.    5. Conclusions We assume, with OuLiPo, that poeticity hinges at least partially on dynamic playing with constraints. Similarly, we have as a premise that at least some aspects of inspiration or creativity involve finding previously unseen patterns. Given these premises, a device which puts potential patterns before us (which prosthetically increases our power to envisage new devices) is of interest. In the proposed paper, we will illustrate these assumptions with a richer range of examples and with a more detailed discussion of the theoretical issues which underpin them.   