<?xml version="1.0" encoding="utf-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:x="http://www.w3.org/1999/xhtml" xmlns:exsl="http://exslt.org/common" xml:id="Paper-322">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>An Integrated Approach to the Procedural Modeling of Ancient Cities and Buildings</title>
        <author>
          <name>
            <surname>Saldana</surname>, <forename>Marie </forename>
          </name>
          <affiliation>UCLA</affiliation>
          <email>marie.saldana@gmail.com</email>
        </author>
      </titleStmt>
      <publicationStmt>
        <authority/>
        <publisher>EPFL, Switzerland</publisher>
        <distributor>
          <name>EPFL Digital Humanities Laboratory</name>
          <address>
            <addrLine>GC D2 386</addrLine>
            <addrLine>Station 18</addrLine>
            <addrLine>CH-1015 Lausanne</addrLine>
            <addrLine>frederic.kaplan@epfl.ch</addrLine>
          </address>
        </distributor>
        <pubPlace>Lausanne, Switzerland</pubPlace>
        <address>
          <addrLine>EPFL</addrLine>
          <addrLine>CH-1015 Lausanne</addrLine>
        </address>
        <availability>
          <p/>
        </availability>
      </publicationStmt>
      <notesStmt>
        <note type="abstract">This paper presents a suite of procedural rules for creating 3D models of Roman and Hellenistic architecture and urban environments. Unlike traditional 3D modeling software, which uses polygons to simulate form, procedural modeling entails the use of computer programming languages to write a semantic description of a building that then generates a polygonal model.  Procedural modeling has the potential to address a number of issues related to 3D archaeological reconstructions which are of concern to digital humanists. Of particular interest for archaeologists and architectural historians is the ability to test hypothetical reconstructions of ancient architecture in a fully realized urban context. The procedural rules link each iteration of a model to its source material, allowing the degree of certainty present in each model to be accurately defined through the documentation of each step in the process of interpreting a given data set. Procedural modeling thus enhances the scholarly value of architectural reconstructions by providing a platform for the comparison and refutation of 3D visualizations.</note>
      </notesStmt>
      <sourceDesc>
        <p>No source: created in electronic format.</p>
        <p>
          <date when="20140709"/>
          <time when="09:00:00"/>
        </p>
		<p n="session">1</p>
		<p n="room">321 - Amphipôle</p>
      </sourceDesc>
    </fileDesc>
    <profileDesc>
      <textClass>
        <keywords scheme="original" n="category">
          <term>Paper</term>
        </keywords>
        <keywords scheme="original" n="subcategory">
          <term>Long Paper</term>
        </keywords>
        <keywords scheme="original" n="keywords">
          <term>3D visualizations</term>
          <term>GIS</term>
          <term>Archaeological reconstruction</term>
          <term>Architectural history</term>
          <term/>
        </keywords>
        <keywords scheme="original" n="topic"/>
      </textClass>
    </profileDesc>
  </teiHeader>
  <text type="paper">
    <front>
      
      <div>
        <p/>
      </div>
    </front>
    <body>
      <div>
      <div>
        <head>I. Introduction</head>
        <figure>
          <graphic url="DH2014_262_domus"/>
          <p>Fig.1: Urban infill created from the procedural 'domus' rule.</p>
        </figure>
        <p>This paper presents a suite of procedural rules for creating 3D models of Roman and Hellenistic architecture and urban environments. The term ‘rules’ in procedural modeling refers to the computer code that generates a 3D model. Unlike traditional 3D modeling software such as SketchUp or 3ds Max, which use polygons to simulate form, procedural modeling entails the use of computer programming languages in textual semantic description of a building that then generates a polygonal model. This represents not only a technical, but also an epistemological difference, as the choice of modeling method can influence not merely the cost or aesthetic outcome of a project, but also how information is selected, processed, and indeed what is considered to be information versus noise. Procedural modeling requires that each stage of the transmutation of data in the modeling process is rigorously thought out and documented, allowing 3D models to move beyond visualization to become robust research tools. </p>
        <p>Procedural modeling has the potential to address a number of issues related to 3D archaeological reconstructions which are of concern to digital humanists. An important advantage of procedural methodology is that it allows for the rapid prototyping and interactive updating of 3D content. The use of attributes and parameters enables scholars to visualize change over time and gauge the impact of various factors on the built environment. Furthermore, these attributes and parameters can be tracked and harnessed as valuable geospatial data through the use of GIS software and of interactive visual displays. Of particular interest for archaeologists and architectural historians is the ability to test hypothetical reconstructions of ancient architecture in a fully realized urban context. Crucially for humanists, the procedural rules link each iteration of a model to its source material, allowing the degree of certainty present in each model to be accurately defined through the documentation of each step in the process of interpreting a given data set. Procedural modeling thus enhances the scholarly value of architectural reconstructions by providing a platform for the comparison and refutation of 3D visualizations.</p>
      </div>
      <div>
        <head>II. Background and Software </head>
        <p>Reconstruction of historical architecture and cities was an early application of procedural modeling. Significant test cases were built around ancient Rome and Pompeii.<ref target="n1" rend="sup">1</ref>
However, the main commercially available procedural software behind these projects, ESRI CityEngine, is currently being marketed mostly as a low-cost rapid-prototyping pipeline to urban planners and production designers rather than to scholars for its ability to create data-rich, detailed architectural models.<ref target="n2" rend="sup">2</ref>
Procedural engines are based on proprietary high-level graphics programming languages which are extremely time- and resource-consuming to produce for most academics, particularly in the humanities, and therefore few open-source alternatives exist.<ref target="n3" rend="sup">3</ref>
A precedent for my current project is Pascal Mueller’s 2010 PhD dissertation which used classical temples as a case study for demonstrating the potential of CGA shape grammar, the procedural language that eventually became the core of ESRI CityEngine. <ref target="n4" rend="sup">4</ref>I chose to use ESRI CityEngine for my work, because I find it to be the best commercial procedural modeling product for architecture and cities, and because its recent integration with ESRI GIS software such as ArcMap provides significant advantages for managing and visualizing archaeological data (Fig.2).</p>
        <figure>
          <graphic url="DH2014_262_screenshot"/>
          <p>Figure 2: Screenshot from ESRI CityEngine showing text editor for rules (left) model (center) and model attributes (right). </p>
        </figure>
      </div>
      <div>
        <head>III. Methodology and Research Application  </head>
        <p>My work aims at the creation of a full suite of procedural rules for the main typologies of classical architecture.  A master rule for classical temples exemplifies this project. The temple rule was designed to produce a schematic model of any kind of classical temple with a minimal number of parameters. By selecting from a few options, a user can instantly generate, for example, a tetrastyle Tuscan temple on a high podium; a peripteral Doric temple with pronaos and posticum; or an ionic pseudo-dipteral Hellenistic temple with variable intercolumniation. The rules were based on sources such as actual archaeological remains in Italy and Asia Minor, as well as Vitruvian templates.The rules are designed to by fully modular, that is, the rule for a specific typology such as a temple, arch, or stoa collates several  sub-rules, which can be re-used and combined as necessary. These construct the components of a building, such as colonnades, entablatures, pediments, and roofs, or refer to a specific order, such as Tuscan, Doric, Ionic, or Corinthian.  Urban models are then generated from geodatabases imported from GIS software ArcMap. These geodatabases contain the footprint of the building, along with specific attributes necessary to create the model (such as column diameter, order, and building type), and the bibliographic citations that reference the source material from which the attribute data was derived. All of this textual material may be queried in the final visualization of the model. The original impetus for the creation of the suite of rules was the generation of a series of 3D models of early Republican Rome, eventually to be visualized interactively with Unity game engine web viewer<hi rend="sup">5</hi>. The procedural rules facilitated the hybridization of actual Roman data, comparanda from other sites, and hypothetical interpolation that was necessary to complete the picture of the Forum Romanum in this time period. Eventually, the project and the rules expanded to cover the site of Magnesia on the Meander in Turkey, necessitating the addition of new typologies. To date, the suite of procedural rules includes a core set of typologies responding to the topography of Rome and Magnesia on the Meander. These include temples, altars, basilicas, houses, shops, streets, triumphal arches, arcades, colonnaded streets, stoas, theaters, and stadiums (Figs.1,3,4). It is anticipated that these rules will become valuable tools for visualizing the urban fabric at numerous other locations where the archaeological data must be supplemented with well-researched templates that provide customizable parameters.</p>
        <figure>
          <graphic url="DH2014_262_B1"/>
          <p>Figure 3: Procedural basilica, shown in a configuration with a row of shops in front</p>
        </figure>
      </div>
      <div>
			<head>IV. Conclusions </head>
			<p>Procedural modeling presents a powerful new methodology that has yet been underexploited by the Digital Humanities. Contrary to traditional 3D modeling methods, procedural modeling forces the investigator to approach visual and 3D content through a rigorously syntactic and process-oriented framework. This framework preserves the hierarchy of decisions that result in a given visual interpretation of archaeological evidence. Models thus produced are extremely information-rich and the ways in which they can be used to aid research are just beginning to be explored.</p>
			<figure>
			  <graphic url="DH2014_262_HT1"/>
			  <p>Figure 4: The Ionic temple of Artemis at Magnesia on the Meander, procedurally generated from the master temple rule.</p>
			</figure>
		  </div>
      </div>
    </body>
    <back>
      <div type="References">
        <listBibl>
          <bibl>
            1. See the Rome Reborn Project, <ref type="url" target="http://romereborn.frischerconsulting.com/.">romereborn.frischerconsulting.com/.</ref> The procedural aspects of this project were published in Dylla, Kimberly, Bernard Frischer et al., 2010. "Rome Reborn 2.0: A Case Study of Virtual City Reconstruction Using Procedural Modeling Techniques," in CAA 2009. Making History Interactive. 37th Proceedings of the CAA Conference March 22-26, 2009, Williamsburg, Virginia (Archaeopress: Oxford, 2010) 62-66. On Procedural Pompeii, see <ref type="url" target="http://www.esri.com/software/cityengine/resources/casestudies/procedural-pompeii.">www.esri.com/software/cityengine/resources/casestudies/procedural-pompeii.</ref>
          </bibl>
          <bibl>
            2. <hi rend="bold">ESRI CityEngine</hi>: <ref type="url" target="http://www.esri.com/software/cityengine">www.esri.com/software/cityengine</ref>
          </bibl>
          <bibl>
            3. Some recent cultural heritage projects make use of parametric tools such as Building Information Modeling (BIM), for example ArchiCAD and Revit, or the Rhinoceros plug-in Grasshopper.
          </bibl>
          <bibl>
            4. Mueller’s (unpublished) dissertation and Parthenon rule, which is distributed as an example with CityEngine software, were indispensable in my efforts to master CGA shape grammar. However, his work was oriented to the field of computer science and restricted to peripteral temples of the Doric order. The rules I present here are entirely my own work, as a full restructuring and rewriting of the code, with the addition of much new material, was necessary to implement a wider agenda geared toward an architectural audience. For an overview of the architectural application of CGA shape grammar, see Mueller, et al., 2006. “Procedural Modeling of Buildings”, in ACM SIGGRAPH 2006 Papers (ACM, Boston, 2006) 614-623.
          </bibl>
          <bibl>
            5. This work was undertaken as part of the RomeLab project, an offshoot of the UCLA Experiential Technologies Center. The Unity models are playable at <ref type="url" target="http://romelab.etc.ucla.edu/.">romelab.etc.ucla.edu/.</ref> RomeLab investigates the Roman Forum of ca.186 BC, some 500 years before the period represented by Rome Reborn, therefore the procedural content of RomeLab is entirely new.
          </bibl>
        </listBibl>
      </div>
    </back>
  </text>
</TEI>
